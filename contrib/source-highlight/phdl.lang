# This is a PHDL syntax definition file for use by GNU source-highlight.
# See <http://www.gnu.org/software/src-highlite> for more information.

# Syntax variables
vardef NAME = '([[:word:]]|[^[:print:]])+'
vardef WORD_START = '(?<!([[:word:]]|[^[:print:]]))'
vardef WORD_END   =  '(?!([[:word:]]|[^[:print:]]))'

# Comments
vardef TODO = "TODO|FIXME"
environment comment start "//" begin
	todo = $TODO
end
environment comment delim "/*" "*/" multiline nested begin
	todo = $TODO
end

# Escaped quotes
todo = '\\"'

# Attributes
keyword = "attribute"
property = "@" + $NAME

# Parameters
keyword = "parameter"
variable = "$" + $NAME

# Nets, Ports, and Pins
type = "net|port|pin"

# Instances
keyword = "instance|of"

# Packages, Designs, and Devices
function = "package|device|design"

# Imports
preproc = "import"

# Brackets
cbracket = "{|}"

# Slices
environment regexp delim "[" "]" multiline begin
	number = '[[:digit:]]'
end

# Symbol
symbol='(?![_"])[[:punct:]]'

# Names
normal = $NAME
environment string delim "\"" "\"" multiline begin
	specialchar = '\\([\\"])'
	error = '\\.'
	environment specialchar delim "\\u{" "}" begin
		number = '[[:xdigit:]]+'
		error = '[^}]+'
	end
end


# Names
#normal = $NAME

# Define our keywords. Even though PHDL doesn't use *reserved* keywords,
# highlighting them as if it does is much simpler.
#keyword = "
#attribute|
#design|
#device|
#import|
#instance|
#net|
#of|
#open|
#package
#parameter|
#pin|
#port"
#
## Types we might want to use:
## http://www.gnu.org/software/src-highlite/source-highlight.html#Output-format-style
#
## The prefix on attributes and parameters is as close to a "type" as we have.
#type = "$|@"
#
## Every
#symbol='[!-/]|[[-\`]|[{-~]'
#
#
## Quoted elements in our language are identifiers
#string delim "\"" "\"" escape "\\" multiline
#
#syntax match   Type "[@$]"
#syntax match   Special "[][(){}<>=\\.,:;]"
#syntax region  Error   start="[\t ]\+$" end="$"
#
#let b:current_syntax = "phdl"
